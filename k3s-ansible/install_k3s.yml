- name: Instalar dependencias en todos los nodos
  hosts: k3s_cluster
  become: true
  tasks:
    - name: Instalar Python
      raw: yum install -y python3
      changed_when: false

    - name: Instalar curl usando yum
      shell: yum install -y curl
      args:
        creates: /usr/bin/curl

- name: Instalar K3s en el nodo master
  hosts: k3s_master
  become: true
  vars:
    k3s_version: v1.33.3+k3s1
  tasks:
    - name: Instalar K3s (master)
      shell: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} INSTALL_K3S_SKIP_SELINUX_RPM=true INSTALL_K3S_SELINUX_WARN=true INSTALL_K3S_EXEC="--disable=traefik" sh -
      register: k3s_install_result

    - name: Mostrar salida de la instalación
      debug:
        var: k3s_install_result.stdout_lines

    - name: Esperar que k3s levante el servicio
      wait_for:
        path: /etc/rancher/k3s/k3s.yaml
        timeout: 120

    - name: Verificar que el servicio esté activo
      systemd:
        name: k3s
        state: started
        enabled: true

    - name: Obtener token del master
      slurp:
        src: /var/lib/rancher/k3s/server/node-token
      register: token_file

    - name: Guardar token en archivo local
      copy:
        content: "{{ token_file['content'] | b64decode }}"
        dest: ./node-token.txt
      delegate_to: localhost
      become: false

    - name: Configurar entorno global para helm y kubectl para todos los usuarios
      copy:
        dest: /etc/profile.d/k3s_env.sh
        content: |
          export PATH=$PATH:/usr/local/bin
          export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
          alias kubectl='k3s kubectl'
        mode: '0755'

    - name: Guardar K3s token en SSM Parameter Store
      aws_ssm_parameter_store:
        name: /k3s/token
        description: "K3s cluster token"
        value: "{{ token_file['content'] | b64decode }}"
        type: SecureString
        overwrite_value: always
        region: us-east-1
      delegate_to: localhost
      become: false

- name: Instalar K3s en los workers
  hosts: k3s_nodes
  become: true
  vars:
    k3s_version: v1.33.3+k3s1
    k3s_master_ip: "{{ hostvars[groups['k3s_master'][0]]['ansible_host'] }}"
  tasks:
    - name: Leer token del master
      set_fact:
        k3s_token: "{{ lookup('file', 'node-token.txt') | trim }}"

    - name: Instalar K3s (worker)
      shell: |
        curl -sfL https://get.k3s.io | \
        INSTALL_K3S_VERSION={{ k3s_version }} \
        INSTALL_K3S_SKIP_SELINUX_RPM=true \
        K3S_URL=https://{{ k3s_master_ip }}:6443 \
        K3S_TOKEN={{ k3s_token }} \
        sh -
      register: k3s_worker_result

    - name: Mostrar salida de instalación
      debug:
        var: k3s_worker_result.stdout_lines

    - name: Verificar que el servicio k3s-agent esté activo
      systemd:
        name: k3s-agent
        state: started
        enabled: true

- name: Instalar Helm y Git en el master
  hosts: k3s_master
  become: true
  vars:
    helm_version: "v3.19.0"
  tasks:
    - name: Instalar Git
      raw: yum install -y git
      changed_when: false

    - name: Descargar Helm
      get_url:
        url: "https://get.helm.sh/helm-{{ helm_version }}-linux-arm64.tar.gz"
        dest: "/tmp/helm.tar.gz"

    - name: Extraer Helm
      unarchive:
        src: "/tmp/helm.tar.gz"
        dest: "/tmp/"
        remote_src: yes

    - name: Mover binario de Helm al PATH
      command: mv /tmp/linux-arm64/helm /usr/local/bin/helm

    - name: Asignar permisos al binario de Helm
      file:
        path: /usr/local/bin/helm
        mode: '0755'

    - name: Verificar instalación de Helm
      command: /usr/local/bin/helm version
      register: helm_version_resul

    - name: Mostrar versión de Helm
      debug:
        var: helm_version_result.stdout

    - name: Crear symlink para helm en /usr/bin
      file:
        src: /usr/local/bin/helm
        dest: /usr/bin/helm
        state: link

    - name: Hacer persistente la variable KUBECONFIG para todos los usuarios
      copy:
        dest: /etc/profile.d/kubectl_config.sh
        content: |
          export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
        mode: '0755'